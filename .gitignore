# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
xcuserdata/

## Compatibility with Xcode 8 and earlier (ignoring not required starting Xcode 9)
*.xcscmblueprint
*.xccheckout

## Compatibility with Xcode 9.3 and later (ignoring not required starting Xcode 10)
*.xcodeproj/*
!*.xcodeproj/project.pbxproj
!*.xcodeproj/xcshareddata/
!*.xcodeproj/project.xcworkspace/
*.xcodeproj/project.xcworkspace/xcuserdata/

## Xcode Patch
*.xcodeproj/project.xcworkspace/xcshareddata/

## App packaging
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

## Logs
*.log

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
# *.xcodeproj
#
# Xcode automatically generates this directory with a .xcworkspacedata file and xcuserdata
# hence it is not needed unless you have added a package configuration file to your project
# .swiftpm

.build/

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
Pods/
#
# Add this line if you want to avoid checking in source code from the CocoaPods dependencies.
# Pods/

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build/

# Accio dependency management
Dependencies/
.accio/

# fastlane
#
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the screenshot guidelines see
# https://docs.fastlane.tools/getting-started/ios/screenshots/

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output

# Code Injection
#
# After new code Injection tools there's a generated folder /iOSInjectionProject
# https://github.com/johnno1962/injectionforxcode

iOSInjectionProject/

# macOS
.DS_Store

# IDE
.vscode/
.idea/

# API Keys and Sensitive Information
GoogleService-Info.plist
config.json
secrets.json
*.env
.env*
api_keys.json
credentials.json

# OpenAI API Keys (if stored in separate files)
openai_api_key.txt
.openai_key

# Image placeholders (keep structure, ignore placeholder files)
images/screenshots/*-placeholder.txt

# Large screenshot files (optional - remove if you want to commit screenshots)
# images/screenshots/*.png
# images/screenshots/*.jpg

# Build artifacts
build/
DerivedData/

# Archives
*.xcarchive

# Temporary files
*.tmp
*.temp

# Crash logs
*.crash

# Local development
local_config.json
dev_settings.json

# Testing
*.gcno
*.gcda
coverage.xml
coverage/

# Documentation build
docs/build/

# Backup files
*.backup
*~
